{"ast":null,"code":"var _jsxFileName = \"/home/bhumika/cp301/react-flask/client/src/Pages/TodoPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Card } from '../Components/Card/card';\nimport { Form } from \"../Components/Form/form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TodoPage = () => {\n  _s();\n\n  const [todo, setTodo] = useState([]);\n  const [addTodo, setAddTodo] = useState('');\n  useEffect(() => {\n    fetch('/api').then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(data => setTodo(data));\n  }, []);\n\n  const handleFormChange = inputValue => {\n    setAddTodo(inputValue);\n    console.log(addTodo);\n  };\n\n  const handleFormSubmit = () => {\n    fetch('/api/create', {\n      method: 'POST',\n      body: JSON.stringify({\n        content: addTodo\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(response => response.json()).then(message => {\n      console.log(message);\n      set;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      userInput: addTodo,\n      onFormChange: handleFormChange,\n      onFormSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      listOfTodos: todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodoPage, \"45Ja5tGjMfV/uaS2qYn2eVTmbt8=\");\n\n_c = TodoPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoPage\");","map":{"version":3,"sources":["/home/bhumika/cp301/react-flask/client/src/Pages/TodoPage.js"],"names":["React","useState","useEffect","Card","Form","TodoPage","todo","setTodo","addTodo","setAddTodo","fetch","then","response","ok","json","data","handleFormChange","inputValue","console","log","handleFormSubmit","method","body","JSON","stringify","content","headers","message","set"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,yBAAnB;AACA,SAASC,IAAT,QAAqB,yBAArB;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAE1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,KAAK,CAAC,MAAD,CAAL,CAAcC,IAAd,CAAmBC,QAAQ,IAAI;AAC3B,UAAGA,QAAQ,CAACC,EAAZ,EAAe;AACX,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;AACJ,KAJD,EAIGH,IAJH,CAIQI,IAAI,IAAIR,OAAO,CAACQ,IAAD,CAJvB;AAKH,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMC,gBAAgB,GAAIC,UAAD,IAAgB;AACrCR,IAAAA,UAAU,CAACQ,UAAD,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACH,GAHD;;AAKA,QAAMY,gBAAgB,GAAG,MAAM;AAC1BV,IAAAA,KAAK,CAAC,aAAD,EAAgB;AACjBW,MAAAA,MAAM,EAAE,MADS;AAEjBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,OAAO,EAACjB;AADS,OAAf,CAFW;AAMjBkB,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AANQ,KAAhB,CAAL,CAUGf,IAVH,CAUQC,QAAQ,IAAIA,QAAQ,CAACE,IAAT,EAVpB,EAWCH,IAXD,CAWMgB,OAAO,IAAI;AAACT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,OAAZ;AACfC,MAAAA,GAAG;AACN,KAbA;AAcJ,GAfD;;AAiBA,sBACI;AAAA,4BACA,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEpB,OAAjB;AAA0B,MAAA,YAAY,EAAGQ,gBAAzC;AAA2D,MAAA,YAAY,EAAEI;AAAzE;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,IAAD;AAAM,MAAA,WAAW,EAAEd;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AAMH,CAzCM;;GAAMD,Q;;KAAAA,Q","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Card} from '../Components/Card/card';\nimport { Form } from \"../Components/Form/form\";\n\nexport const TodoPage = () => { \n\n    const [todo, setTodo] = useState([])\n    const [addTodo, setAddTodo] = useState('')\n\n    useEffect(() => {\n        fetch('/api').then(response => {\n            if(response.ok){\n                return response.json()\n            }\n        }).then(data => setTodo(data))\n    }, [])\n\n    const handleFormChange = (inputValue) => {\n        setAddTodo(inputValue)\n        console.log(addTodo)\n    }\n\n    const handleFormSubmit = () => {\n         fetch('/api/create', {\n             method: 'POST',\n             body: JSON.stringify({\n                 content:addTodo\n             }),\n    \n             headers: {\n                 \"Content-type\": \"application/json; charset=UTF-8\"\n             }\n            \n         }).then(response => response.json())\n         .then(message => {console.log(message)\n            set\n        })\n    }\n\n    return(\n        <>\n        <Form userInput={addTodo} onFormChange={ handleFormChange} onFormSubmit={handleFormSubmit}/>\n        <Card listOfTodos={todo}/>\n       </>\n    )\n}"]},"metadata":{},"sourceType":"module"}