{"ast":null,"code":"var _jsxFileName = \"/home/bhumika/cp301/react-flask/client/src/Pages/TodoPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Card } from '../Components/Card/card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TodoPage = () => {\n  _s();\n\n  const [todo, setTodo] = useState([]);\n  useEffect(() => {\n    fetch('/api').then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(data => setTodo(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      listOf: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n};\n\n_s(TodoPage, \"4iPjF1Dk4tBAVioxtSV8zxHVK4I=\");\n\n_c = TodoPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoPage\");","map":{"version":3,"sources":["/home/bhumika/cp301/react-flask/client/src/Pages/TodoPage.js"],"names":["React","useState","useEffect","Card","TodoPage","todo","setTodo","fetch","then","response","ok","json","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,yBAAnB;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAE1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,KAAK,CAAC,MAAD,CAAL,CAAcC,IAAd,CAAmBC,QAAQ,IAAI;AAC3B,UAAGA,QAAQ,CAACC,EAAZ,EAAe;AACX,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;AACJ,KAJD,EAIGH,IAJH,CAIQI,IAAI,IAAIN,OAAO,CAACM,IAAD,CAJvB;AAKH,GANQ,EAMN,EANM,CAAT;AAOA,sBACI;AAAA,2BACD,QAAC,IAAD;AAAM,MAAA,MAAM;AAAZ;AAAA;AAAA;AAAA;AAAA;AADC,mBADJ;AAKH,CAhBM;;GAAMR,Q;;KAAAA,Q","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Card} from '../Components/Card/card';\n\nexport const TodoPage = () => { \n\n    const [todo, setTodo] = useState([])\n\n    useEffect(() => {\n        fetch('/api').then(response => {\n            if(response.ok){\n                return response.json()\n            }\n        }).then(data => setTodo(data))\n    }, [])\n    return(\n        <>\n       <Card listOf/>\n       </>\n    )\n}"]},"metadata":{},"sourceType":"module"}